一、CORS
Cross-Origin Resource Sharing(CORS) 是W3C为浏览器制定的可以跨域通信的规范
CORS 需要客户端和服务器同时支持
1.简单请求
包含一个Origin的请求头部（无论简单非简单），声明本次请求来自哪个源
服务器根据这个值决定是否同意这次请求，回应的头信息没有包含Access-Control-Allow-Origin则出错

2.非简单请求
浏览器会发送两个请求, 第一个请求(预检请求)会向服务器确定是否接受这个跨域请求, 
第二个才是真正的发出请求. 浏览器自动的处理这两个请求, 
同时预检请求也是可以被缓存的, 而不用每次请求都需要发送预检请求.

如果服务器想要拒绝一个跨域请求, 那么他可以直接回复一个简单的响应(如 HTTP 200), 
但在响应头中不要包含任何与CORS相关的响应头设置. 服务器也可能会因为预检请求不合法而拒绝这个请求. 
如果预检请求中不包含正确的CORS头部设置, 它就不会发送实际的请求

二、JSONP
利用<script>标签没有跨域限制的“漏洞”来达到与第三方通讯的目的。
当需要通讯时，本站脚本创建一个<script>元素，地址指向第三方的API网址，
并提供一个回调函数来接收数据（函数名可约定，或通过地址参数传递）。 
第三方产生的响应为json数据的包装（故称之为jsonp，即json padding），
这样浏览器会调用callback函数，并传递解析后json对象作为参数。
本站脚本可在callback函数里处理所传入的数据。

三、代理服务器

四、WebSocket
